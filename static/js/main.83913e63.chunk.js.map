{"version":3,"sources":["App.js","redux/action/action.js","serviceWorker.js","redux/reducers/reducers.js","index.js"],"names":["App","props","createEvent","event","preventDefault","x","isNaN","state","Price","setState","validatePrice","Discount","validateDiscount","Name","validateName","Description","validateDescription","Venue","validateVenue","parseInt","alert","list1","localStorage","getItem","undefined","JSON","parse","push","ename","edesc","evenue","eprice","ediscount","setData1","clearFields","onChangehandler","target","name","valx","value","filterList","list","id","filterData1","l1","filter","item","console","log","this","getData1","className","Container","Row","Col","xs","ButtonGroup","Button","onClick","style","textAlign","eventData1","map","items","Card","width","Body","Title","Text","ListGroup","ListGroupItem","Form","Group","noValidate","controlId","Label","Control","type","placeholder","onChange","variant","React","Component","connect","eventData","dispatch","getData","setItem","stringify","setData","filterData","Boolean","window","location","hostname","match","defaultState","reducer","action","Store1","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.83913e63.chunk.js","sourcesContent":["import React from 'react';\n// import { Button } from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Row, Col, Container, Button, Form, ButtonGroup, Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getData, setData, filterData } from './redux/action/action';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Name: '',\n      Description: '',\n      Venue: '',\n      Price: '',\n      Discount: '',\n    }\n  }\n  createEvent = (event) => {\n    event.preventDefault();\n    let x = 0;\n    if (isNaN(this.state.Price) || this.state.Price === '') {\n      this.setState({ validatePrice: 1 })\n      x = 1;\n    }\n    if (isNaN(this.state.Discount)) {\n      this.setState({ validateDiscount: 1 })\n      x = 1;\n    }\n    if (this.state.Name === '') {\n      x = 1;\n      this.setState({ validateName: 1 })\n    }\n    if (this.state.Description === '') {\n      x = 1\n      this.setState({ validateDescription: 1 })\n    }\n    if (this.state.Venue === '') {\n      x = 1;\n      this.setState({ validateVenue: 1 })\n    }\n    if (!x && (parseInt(this.state.Price) < parseInt(this.state.Discount)))\n      // console.log(this.state.price + 'and' + this.state.discount)\n      alert('dise valusconut should be less than pric');\n    else if (!x) {\n      let list1 = [];\n      if (localStorage.getItem('elist') === null || localStorage.getItem('elist') === undefined) {\n        list1 = [];\n      }\n      else {\n        list1 = JSON.parse(localStorage.getItem('elist'));\n      }\n\n      list1.push({\n        ename: this.state.Name,\n        edesc: this.state.Description,\n        evenue: this.state.Venue,\n        eprice: this.state.Price,\n        ediscount: this.state.Discount || \"0\",\n      })\n      // localStorage.setItem('elist', JSON.stringify(list1));\n      // this.setState({\n      //   eventList: [...list1],\n      // })\n      this.props.setData1(list1);\n\n      this.clearFields();\n    }\n\n  }\n\n\n  onChangehandler = event => {\n    let x = event.target.name;\n    let valx = \"validate\" + x;\n    this.setState({\n      [x]: event.target.value,\n      [valx]: 0\n    })\n  }\n\n  componentDidMount() {\n    // const list = JSON.parse(localStorage.getItem('elist'));\n    // if (list !== null)\n    //   this.setState({ eventList: list })\n    console.log(\"chaladidmoutn\");\n    this.props.getData1();\n  }\n\n  clearFields = () => {\n    this.setState({\n      Name: '',\n      Description: '',\n      Venue: '',\n      Price: '',\n      Discount: ''\n    })\n  }\n\n  filterList = (event) => {\n    let list = JSON.parse(localStorage.getItem('elist'));\n    if (list !== null) {\n\n      if (event.target.id === 'All') {\n        // this.setState({\n        //   eventList: [...list]\n        // })\n        this.props.filterData1(list);\n      }\n      else if (event.target.id === 'Discount') {\n        const l1 = list.filter(item => item.ediscount !== \"0\")\n        // this.setState({\n        //   eventList: [...l1]\n        // })\n        this.props.filterData1(l1);\n      }\n      else if (event.target.id === 'free') {\n        const l1 = list.filter(item => item.eprice === \"0\")\n        // this.setState({\n        //   eventList: [...l1]\n        // })\n        this.props.filterData1(l1);\n      }\n      else if (event.target.id === 'NoDiscount') {\n        const l1 = list.filter(item => item.ediscount === \"0\")\n        // this.setState({\n        //   eventList: [...l1]\n        // })\n        this.props.filterData1(l1);\n      }\n    }\n  }\n\n  render() {\n    return (\n      < div className=\"divstyle\">\n        <header>\n          <Container >\n            <Row>\n              <Col xs={8}>\n                <Row>\n                  <ButtonGroup>\n                    <Button id=\"All\" onClick={this.filterList}>All</Button>&nbsp;&nbsp;\n                    <Button id=\"Discount\" onClick={this.filterList}>Discount</Button>&nbsp;&nbsp;\n                    <Button id=\"NoDiscount\" onClick={this.filterList}>No Discount</Button>&nbsp;&nbsp;\n                  <Button id=\"free\" onClick={this.filterList}>free</Button>&nbsp;&nbsp;\n                  </ButtonGroup>\n                </Row>\n                <Row >\n                  <h1 style={{ textAlign: \"center\" }}>\n                    Events\n                </h1>\n                </Row>\n                <Row>\n                  {this.props.eventData1 && this.props.eventData1.map(items => {\n\n                    return (<>\n                      <br />\n                      <Card style={{ width: '18rem' }}>\n                        <Card.Body>\n                          <Card.Title>Event name:{items.ename}</Card.Title>\n                          <Card.Text>\n                            DESCRIPTION:{items.edesc}\n                          </Card.Text>\n                        </Card.Body>\n                        <ListGroup className=\"list-group-flush\">\n                          <ListGroupItem>VENUE:{items.evenue}</ListGroupItem>\n                          <ListGroupItem>PRICE:{items.eprice}</ListGroupItem>\n                          <ListGroupItem>DISCOUNT:{items.ediscount}</ListGroupItem>\n                        </ListGroup>\n                      </Card>\n                    </>\n                    )\n                  })}\n\n                </Row>\n              </Col>\n              <Col>\n                <Form>\n                  <Form.Group noValidate controlId=\"name\" >\n                    <Form.Label>Event Name</Form.Label>\n                    <Form.Control type=\"text\" name=\"Name\" value={this.state.Name} placeholder=\"Enter Event Name\" onChange={this.onChangehandler} />\n                    {this.state.validateName ? <div style={{ 'color': 'red' }}>Please enter Event Name</div> : null}\n\n                  </Form.Group>\n                  <Form.Group controlId=\"descriptions\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type=\"text\" name=\"Description\" value={this.state.Description} onChange={this.onChangehandler} placeholder=\"Description\" />\n                    {this.state.validateDescription ? <div style={{ 'color': 'red' }}>Please enter description</div> : null}\n\n                  </Form.Group>\n                  <Form.Group controlId=\"venue\">\n                    <Form.Label>Venue</Form.Label>\n                    <Form.Control type=\"text\" name=\"Venue\" value={this.state.Venue} onChange={this.onChangehandler} placeholder=\"Venue\" />\n                    {this.state.validateVenue ? <div style={{ 'color': 'red' }}>Please enter Venue</div> : null}\n\n                  </Form.Group>\n                  <Form.Group controlId=\"price\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control type=\"text\" name=\"Price\" value={this.state.Price} onChange={this.onChangehandler} placeholder=\"Price\" />\n                    {this.state.validatePrice ? <div style={{ 'color': 'red' }}>Invalid price</div> : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"discount\">\n                    <Form.Label>Discount</Form.Label>\n                    <Form.Control type=\"text\" name=\"Discount\" value={this.state.Discount} onChange={this.onChangehandler} placeholder=\"Discount\" />\n                    {this.state.validateDiscount ? <div style={{ 'color': 'red' }}>Invalid Discount</div> : null}\n\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\" onClick={this.createEvent}>\n                    Submit\n               </Button>{\" \"}\n                  <Button variant=\"primary\" type=\"button\" onClick={this.clearFields}>\n                    Reset\n                </Button>\n\n                </Form>\n              </Col>\n            </Row>\n          </Container>\n\n        </header>\n        <footer className=\"footer\">\n          <p>Developed By:Deepali Gupta</p>\n        </footer>\n      </div >\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(\"staetto props\" + state);\n  return {\n    eventData1: state.eventData\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  console.log(\"dispatchfuncto\" + dispatch);\n  return {\n    getData1: () => dispatch(getData()),\n    setData1: (x) => dispatch(setData(x)),\n    filterData1: (x) => dispatch(filterData(x))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export function getData() {\r\n    const list = JSON.parse(localStorage.getItem('elist'));\r\n    console.log(\"chala redux me\");\r\n    if (list !== null)\r\n        return {\r\n            type: \"Get_Data\",\r\n            getData: list\r\n        }\r\n    else return {\r\n        type: \"Get_Data\",\r\n        getData: null\r\n    }\r\n}\r\n\r\nexport function setData(list1) {\r\n\r\n    localStorage.setItem('elist', JSON.stringify(list1));\r\n    console.log(list1);\r\n    return {\r\n        type: \"Set_Data\",\r\n        setData: list1\r\n    }\r\n}\r\n\r\nexport function filterData(list1) {\r\n\r\n    // localStorage.setItem('elist', JSON.stringify(list1));\r\n    console.log(list1);\r\n    return {\r\n        type: \"Filter_Data\",\r\n        filterData: list1\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const defaultState = {\r\n    eventData: []\r\n}\r\n\r\nfunction reducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case 'Get_Data': return {\r\n            ...state,\r\n            eventData: action.getData\r\n        }\r\n\r\n        case 'Set_Data': return {\r\n            ...state,\r\n            eventData: action.setData\r\n        }\r\n        case 'Filter_Data': return {\r\n            ...state,\r\n            eventData: action.filterData\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './redux/reducers/reducers';\n\nconst Store1 = createStore(reducer);\n\n\nReactDOM.render(\n  <Provider store={Store1}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}